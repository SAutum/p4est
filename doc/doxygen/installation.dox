/**
 * \page installing_p4est Installation
 *
 * \tableofcontents \section  install Installing p4est on Linux Systems
 *
 * \subsection prerequisites Prerequisites
 * - For the installation of \p p4est, autotools are imperative. Ensure you
 *   have:
 *   - \p automake
 *   - \p autoconf
 *   - \p libtool
 *   - \p make
 *
 * \subsection optional Optional Components
 * - For enhancing parallel processing, having \p MPI is advisable.
 *
 * \subsection steps Step-by-step Guide
 *
 * \subsubsection source_retrieval 1. Source Retrieval
 *
 * There are a few ways you can get the source of p4est:
 *
 * - **Debian Linux Distribution**: If you are working with a Debian Linux
 *   distribution , you can install `libp4est-dev` using the Debian package
 *   manager. This provides a frozen and stable version of the code with minimal
 *   hassle. However, contributions back to the software aren't possible in this
 *   manner.
 *
 * - **Tarball**: You can obtain the latest tarball online. After unpacking it,
 *   run `configure` and `make`. Specify an installation prefix to `configure`,
 *   followed by `make install` to see libraries and example programs placed in
 *   the right directories. This method provides a static, stable version of the
 *   code.
 *
 * - **GitHub Repository**: For a more hands-on approach, consider cloning the
 *   p4est GitHub repository. You'll need familiarity with the revision control
 *   tool `git` or its GUI frontends. The branch `prev3-develop` is recommended
 *   as it has minimized dependencies and houses the latest algorithms. To
 *   generate the configure script, call the `./bootstrap` script in the p4est
 *   top-level source directory. This requires a working installation of GNU
 *   autoconf, automake, and libtool.
 *
 * > `git clone https://github.com/cburstedde/p4est.git`
 *
 * \subsubsection bootstrap 2. Bootstrap Execution
 *
 * Navigate to the \p p4est directory and initiate the bootstrap script,
 * especially if you've cloned it from GitHub:
 *
 * > `cd p4est` `./bootstrap`
 *
 * \subsubsection setup 3. Setting up p4est
 *
 * Decide on a compilation directory. For this guide, `~/p4est_build` is used,
 * presuming the source is in `~/p4est`:
 *
 * > `mkdir ~/p4est_build`
 *
 * > `cd ~/p4est_build`
 *
 * > `../p4est/configure [OPTIONS]`
 *
 * The \p configure script is quite versatile and has multiple options, among
 * them:
 * - `--enable-debug`: Activates debugging mode, increasing verbosity and turns
 *   on `P4EST_ASSERT` for checks.
 * - `--enable-mpi`: This integrates the mpi.h header and triggers MPI compiler
 *   wrappers. Without this option, MPI routine wrappers are employed for serial
 *   compilation.
 * - `--disable-mpiio`: This avoids using `MPI_File` based calls.
 *
 * Additionally, the command:
 *
 * > `../p4est/configure --help`
 *
 * prints a list of currently available options to configure.
 *
 * A common developer-oriented configuration might resemble:
 * > relative/path/to/configure CFLAGS="-Wall -Wuninitialized -O0 -g"
 * > --enable-mpi --enable-debug
 *
 * While a production-oriented configuration could be:
 * > relative/path/to/configure CFLAGS="-Wall -Wno-unused-but-set-variable -O2"
 * > --enable-mpi
 *
 * \subsubsection compile 4. Compiling p4est After configuration, the next step
 * is the compilation of \p p4est:
 *
 * > `make -j`
 *
 * > `make install -j`
 *
 * \subsubsection verification 5. Verification Step It's recommended to execute
 * the \p p4est test programs post-installation to ensure everything is in
 * order:
 * > `make check`
 *
 * \subsubsection api_docs 6. Autogenerated API Documentation
 *
 * The Doxygen output for p4est and libsc can be recreated with the following
 * command after the configuration process:
 *
 * > `make doxygen`
 *
 * \subsubsection integration 7. Integrating with p4est For projects aiming to
 * incorporate \p p4est as an external library:
 * > `export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/p4est_install/lib` Append to
 * the compile command: `-I$HOME/p4est_install/include -L$HOME/p4est_install/lib
 * -lp4est -lm`
 *
 * \section further Further information You may also find a detailed
 * documentation for installation on both
 * [Linux](https://github.com/cburstedde/p4est/blob/prev3-develop/INSTALL) and
 * [Windows](https://github.com/cburstedde/p4est/blob/prev3-develop/INSTALL_WINDOWS)
 * in the source folder.
 *
 * For users with Windows 10 version 2004 and higher, you may also try
 * [WSL](https://learn.microsoft.com/en-us/windows/wsl/install) as p4est works
 * well in the subsystem.
 */
